/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Family;

//import com.mysql.cj.protocol.Resultset;
import java.sql.*;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;


import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gertrude
 */
public class Children extends javax.swing.JFrame {
    
    //global variables
    DefaultTableModel table = new DefaultTableModel();
    
    private String db_url="jdbc:mysql://localhost:3306/family_saving_management_system_db";
    private String db_username="root";
    private String db_passwd="Fifi@1234";

    /**
     * Creates new form Children
     */
    public Children() {
        super();
        initComponents();
        addColumn();
        addRows();
     
       
        
    }
   
    
    //method for adding columns in table
    public  void addColumn(){
        table.addColumn("Child ID");
        table.addColumn("First Name");
        table.addColumn("Last Name");
        table.addColumn("DOB");
        table.addColumn("Grade");
        table.addColumn("Gender");
        table.addColumn("Amount");
        table.addColumn("Location");
        child_table.setModel(table);    
    }
    
    ///method for adding rows in table
    public void addRows(){  
        try{
            //retrieve data from database
            
            //create connection
            Connection con = DriverManager.getConnection(db_url,db_username,db_passwd);
            //create statement
            PreparedStatement pst = con.prepareStatement("Select * from children_saving");
            //execute statement
            ResultSet result = pst.executeQuery();
            
            while (result.next()){
                table.addRow(new Object[]{
                    result.getInt(1),
                    result.getString(2),
                    result.getString(3),
                    result.getString(4),
                    result.getString(5),
                    result.getString(6),
                    result.getFloat(7),
                    result.getString(8)
                });
            
            }
            con.close();
            
        }catch(Exception exe){
            exe.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        parentIdTxt = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        firstnameTxt = new javax.swing.JTextField();
        lastnameTxt = new javax.swing.JTextField();
        locationTxt = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        modifyBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        child_table = new javax.swing.JTable();
        refreshBtn = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();
        searchTxt = new javax.swing.JTextField();
        startAmountTxt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        idTxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        genderCombo = new javax.swing.JComboBox<>();
        classCombo = new javax.swing.JComboBox<>();
        updateAmountBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        logoutBtn = new javax.swing.JButton();
        date_chooser = new com.toedter.calendar.JDateChooser();

        parentIdTxt.setToolTipText("");
        parentIdTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parentIdTxtActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI Light", 3, 24)); // NOI18N
        jLabel2.setText("Children Registration Form");

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        jLabel1.setText("First Name:");

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        jLabel3.setText("Gender");

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        jLabel4.setText("Class:");

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        jLabel5.setText("Location:");

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        jLabel6.setText("DOB");

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        jLabel7.setText("Last Name:");

        firstnameTxt.setToolTipText("");

        lastnameTxt.setToolTipText("");

        locationTxt.setToolTipText("");

        addBtn.setBackground(new java.awt.Color(0, 153, 51));
        addBtn.setFont(new java.awt.Font("Segoe UI Light", 3, 18)); // NOI18N
        addBtn.setForeground(new java.awt.Color(255, 255, 255));
        addBtn.setText("ADD");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        modifyBtn.setBackground(new java.awt.Color(0, 51, 153));
        modifyBtn.setFont(new java.awt.Font("Segoe UI Light", 3, 18)); // NOI18N
        modifyBtn.setForeground(new java.awt.Color(255, 255, 255));
        modifyBtn.setText("MODIFY");
        modifyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyBtnActionPerformed(evt);
            }
        });

        deleteBtn.setBackground(new java.awt.Color(153, 0, 51));
        deleteBtn.setFont(new java.awt.Font("Segoe UI Light", 3, 18)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteBtn.setText("DELETE");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        jLabel8.setBackground(new java.awt.Color(102, 153, 0));
        jLabel8.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        jLabel8.setText("Children Details");

        child_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        child_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                child_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(child_table);

        refreshBtn.setBackground(new java.awt.Color(0, 153, 51));
        refreshBtn.setFont(new java.awt.Font("Segoe UI Light", 3, 18)); // NOI18N
        refreshBtn.setForeground(new java.awt.Color(255, 255, 255));
        refreshBtn.setText("REFRESH");
        refreshBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(261, 261, 261)
                .addComponent(jLabel8)
                .addGap(64, 64, 64)
                .addComponent(refreshBtn)
                .addContainerGap(276, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(refreshBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80))
        );

        searchBtn.setBackground(new java.awt.Color(102, 102, 102));
        searchBtn.setFont(new java.awt.Font("Segoe UI Light", 3, 18)); // NOI18N
        searchBtn.setForeground(new java.awt.Color(255, 255, 255));
        searchBtn.setText("SEARCH");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        searchTxt.setToolTipText("");

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        jLabel9.setText("ID");

        idTxt.setToolTipText("");
        idTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idTxtActionPerformed(evt);
            }
        });

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        jLabel10.setText("Enter ID:");

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        jLabel11.setText("Start Amount::");

        genderCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Female", "Male", "Other" }));

        classCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nursery 1", "Nursery 2", "Nursery 3", "Grade 1", "Grade 2", "Grade 3", "Grade 4", "Grade 5", "Grade 6", "Grade 7", "Grade 8", "Grade 9", "Grade 10", "Grade 11", "Grade 12" }));

        updateAmountBtn.setBackground(new java.awt.Color(0, 204, 255));
        updateAmountBtn.setFont(new java.awt.Font("Segoe UI Light", 3, 18)); // NOI18N
        updateAmountBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateAmountBtn.setText("Update Amount");
        updateAmountBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateAmountBtnActionPerformed(evt);
            }
        });

        clearBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        clearBtn.setForeground(new java.awt.Color(255, 51, 51));
        clearBtn.setText("CLEAR");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        logoutBtn.setBackground(new java.awt.Color(255, 51, 51));
        logoutBtn.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        logoutBtn.setForeground(new java.awt.Color(255, 255, 255));
        logoutBtn.setText("Log OUT");
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });

        date_chooser.setDateFormatString("yyyy-MM-dd");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(109, 109, 109)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(132, 132, 132)
                                        .addComponent(idTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jLabel4)
                                                    .addComponent(jLabel6)
                                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(26, 26, 26))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addGap(26, 26, 26))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel11)
                                                    .addComponent(jLabel5))
                                                .addGap(1, 1, 1)))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(locationTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(genderCombo, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(startAmountTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(32, 32, 32)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(lastnameTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                                                    .addComponent(firstnameTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                                                    .addComponent(classCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(date_chooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(addBtn)
                                .addGap(37, 37, 37)
                                .addComponent(modifyBtn)
                                .addGap(37, 37, 37)
                                .addComponent(deleteBtn)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(updateAmountBtn)
                                .addGap(27, 27, 27)
                                .addComponent(clearBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(logoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(searchTxt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchBtn))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(idTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(firstnameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lastnameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(date_chooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(classCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(genderCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(startAmountTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(locationTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addBtn)
                            .addComponent(modifyBtn)
                            .addComponent(deleteBtn)
                            .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(logoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(84, 84, 84)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateAmountBtn)
                        .addGap(359, 359, 359))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void parentIdTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parentIdTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_parentIdTxtActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
       try{
           //create connection
           Connection con  = DriverManager.getConnection(db_url,db_username,db_passwd);
            //create statement
            PreparedStatement pst = con.prepareStatement("select * from children_saving where  first_name = ?"
                    + "OR last_name = ? ");
            
            pst.setString(1,searchTxt.getText() );
            pst.setString(2, searchTxt.getText());
           // int search = Integer.parseInt(searchTxt.getText());
            //pst.setInt(3, search);
            //execute statement
            ResultSet result = pst.executeQuery();
            
            //set table to 0 rows
            table.setRowCount(0);
           
            //display searched item in table
            while (result.next()){
                table.addRow(new Object[]{
                    result.getInt(1),
                    result.getString(2),
                    result.getString(3),
                    result.getString(4),
                    result.getString(5),
                    result.getString(6),
                    result.getFloat(7),
                    result.getString(8)
                });
           
            }
      
       }catch(Exception exe){
           exe.printStackTrace();
       }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void addExceptions(){
        try{
            String dob = ((JTextField)date_chooser.getDateEditor().getUiComponent()).getText() ;
            String age[] = dob.split("-");
            String start = startAmountTxt.getText();
            String child_id = idTxt.getText();
            String gender = String.valueOf(genderCombo.getSelectedItem()) ;
            String grade = String.valueOf(classCombo.getSelectedItem());
            
            //setting validations of data required
            
            if(idTxt.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(this, "ID is required", "Data Required",
                        JOptionPane.WARNING_MESSAGE);}
            else  if(firstnameTxt.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(this, "First Name is required", "Data Required",
                        JOptionPane.WARNING_MESSAGE);
            }else if(lastnameTxt.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(this, "Last Name is required", "Data Required",
                        JOptionPane.WARNING_MESSAGE);
            }
            else if(dob.trim().isEmpty()){
                JOptionPane.showMessageDialog(this, "DOB is required", "Data Required",
                        JOptionPane.WARNING_MESSAGE);
            }
           
            else if(startAmountTxt.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(this, "Start Amount is required", "Data Required",
                        JOptionPane.WARNING_MESSAGE);
            }
            else if(locationTxt.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(this, "Location is required", "Data Required",
                        JOptionPane.WARNING_MESSAGE);
            }
            else{
                
                //setting validation for age
               float amount =Float.parseFloat(start); 
               int year = Integer.parseInt(age[0]);
                int id = Integer.parseInt(child_id);
                if(year<2005 ){
                     JOptionPane.showMessageDialog(this, "Minimum age is 18", "Data Required",
                        JOptionPane.ERROR_MESSAGE);
                }
                else{
                    //setting validation of amount
                    if(amount < 2_000){
                     JOptionPane.showMessageDialog(this, "Minimum Amount is 2000", "Data Required",
                        JOptionPane.ERROR_MESSAGE);
                    }
                    else{
                              // Get the current date
                            LocalDate currentDate = LocalDate.now();

                            // Get the user-selected date
                            dob = dob.trim();

                            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd"); // The formatter for the date string
                            LocalDate localDate = LocalDate.parse(dob,formatter); // Parse the date string into a LocalDate

                            // Compare the two dates
                            if (localDate.isAfter(currentDate)) {
                                JOptionPane.showMessageDialog(this,"The user-selected date is in the future");

                            }
                    }
                }
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        try{
            String dob = ((JTextField)date_chooser.getDateEditor().getUiComponent()).getText() ;
            String age[] = dob.split("-");
            String start = startAmountTxt.getText();
            String child_id = idTxt.getText();
            String gender = String.valueOf(genderCombo.getSelectedItem()) ;
            String grade = String.valueOf(classCombo.getSelectedItem());
            
            //setting validations of data required
            
            if(idTxt.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(this, "ID is required", "Data Required",
                        JOptionPane.WARNING_MESSAGE);}
            else  if(firstnameTxt.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(this, "First Name is required", "Data Required",
                        JOptionPane.WARNING_MESSAGE);
            }else if(lastnameTxt.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(this, "Last Name is required", "Data Required",
                        JOptionPane.WARNING_MESSAGE);
            }
            else if(dob.trim().isEmpty()){
                JOptionPane.showMessageDialog(this, "DOB is required", "Data Required",
                        JOptionPane.WARNING_MESSAGE);
            }
           
            else if(startAmountTxt.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(this, "Start Amount is required", "Data Required",
                        JOptionPane.WARNING_MESSAGE);
            }
            else if(locationTxt.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(this, "Location is required", "Data Required",
                        JOptionPane.WARNING_MESSAGE);
            }
            else{
                
                //setting validation for age
               float amount =Float.parseFloat(start); 
               int year = Integer.parseInt(age[0]);
                int id = Integer.parseInt(child_id);
                if(year<2005 ){
                     JOptionPane.showMessageDialog(this, "Minimum age is 18", "Data Required",
                        JOptionPane.ERROR_MESSAGE);
                }
                else{
                    //setting validation of amount
                    if(amount < 2_000){
                     JOptionPane.showMessageDialog(this, "Minimum Amount is 2000", "Data Required",
                        JOptionPane.ERROR_MESSAGE);
                    }
                    else{
                              // Get the current date
                            LocalDate currentDate = LocalDate.now();

                            // Get the user-selected date
                            dob = dob.trim();

                            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd"); // The formatter for the date string
                            LocalDate localDate = LocalDate.parse(dob,formatter); // Parse the date string into a LocalDate

                            // Compare the two dates
                            if (localDate.isAfter(currentDate)) {
                                JOptionPane.showMessageDialog(this,"The user-selected date is in the future");

                            }
                    
                    
                    
                    else{
                         //create connection
                        Connection con = DriverManager.getConnection(db_url,db_username,db_passwd);
                        //create statement
                        PreparedStatement pst = con.prepareStatement("Insert into children_saving values(?,?,?,?,?,?,?,?)");
                        pst.setInt(1, id);
                        pst.setString(2, firstnameTxt.getText());
                        pst.setString(3, lastnameTxt.getText());
                        pst.setString(4, dob);
                        pst.setString(5, grade);
                        pst.setString(6, gender);
                        pst.setFloat(7, amount);
                        pst.setString(8 , locationTxt.getText());
                  
                        //execute statement
                        int rowsAffected = pst.executeUpdate();
                        //close connection                    
                       con.close();
                        if(rowsAffected !=0 ){
                            JOptionPane.showMessageDialog(this, "Data inserted successfully");
                        }
                        else{
                             JOptionPane.showMessageDialog(this, "Data is not inserted successfully");
                        }                       
                    }
                    }
                }
            }
        }catch(Exception exe){
        exe.printStackTrace();
    }
    }//GEN-LAST:event_addBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
       
        try{
            // int idToDeleted = Integer.parseInt(JOptionPane.showInputDialog("Enter ID you want to delete"));
           int idToDeleted = Integer.parseInt(idTxt.getText());
            Connection con  = DriverManager.getConnection(db_url,db_username,db_passwd);
            //create statement
            PreparedStatement pst = con.prepareStatement("delete from children_saving where child_id = ?");
            pst.setInt(1, idToDeleted);
            int option = JOptionPane.showConfirmDialog(this, "Are sure you want to delete this Child", "Delete Confirmation"
                    , JOptionPane.YES_NO_OPTION);
           
            if(option == 0){
                 int rowsAffected = pst.executeUpdate();
                 if(rowsAffected >=1 ){
                JOptionPane.showMessageDialog(this, "Data deleted successfully");   
                    }
            }
            else{
                JOptionPane.showMessageDialog(this, "Data is not deleted successfully");
              }
              
          }catch(Exception exe){
            exe.printStackTrace();
        }
        
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void modifyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyBtnActionPerformed
        
        try{
            String dob = ((JTextField)date_chooser.getDateEditor().getUiComponent()).getText() ;
            String age[] = dob.split("-");
            int year = Integer.parseInt(age[0]);
    
           
            
            if(year<2005 ){
                     JOptionPane.showMessageDialog(this, "Minimum age is 18", "Data Required",
                        JOptionPane.ERROR_MESSAGE);
                }
            else{
                  // Get the current date
            LocalDate currentDate = LocalDate.now();

            // Get the user-selected date
            dob = dob.trim();

            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd"); // The formatter for the date string
            LocalDate localDate = LocalDate.parse(dob,formatter); // Parse the date string into a LocalDate

            // Compare the two dates
            if (localDate.isAfter(currentDate)) {
                JOptionPane.showMessageDialog(this,"The user-selected date is in the future");
            
            } else {
                    String gender = String.valueOf(genderCombo.getSelectedItem()) ;
                        String grade = String.valueOf(classCombo.getSelectedItem()) ;
                        String child_id = idTxt.getText();                       
                        
                        int id = Integer.parseInt(child_id);
                        
                        //create connection
                        Connection con = DriverManager.getConnection(db_url,db_username,db_passwd);
                        //create statement
                        PreparedStatement pst = con.prepareStatement("update children_saving set first_name = ?,"
                                + "last_name = ?, DOB = ?, class = ?,gender = ?,location = ? where child_id = ?");
                        
                        pst.setInt(7, id);
                        pst.setString(1, firstnameTxt.getText());
                        pst.setString(2, lastnameTxt.getText());                        
                         pst.setString(3, ((JTextField)date_chooser.getDateEditor().getUiComponent()).getText());
                        pst.setString(4, grade);
                        pst.setString(5, gender);                      
                        pst.setString(6, locationTxt.getText());

                        //execute statement
                        int rowsAffected = pst.executeUpdate();
                        //close connection
                        con.close();
                        
                        if(rowsAffected >=1 ){
                            JOptionPane.showMessageDialog(this, "Data updated successfully");
                        }
                        else{
                             JOptionPane.showMessageDialog(this, "Data is not updated successfully");
                        }
                        
            }
                
                        
                         

                    
            }
                        
                     
                       
        }catch(Exception exe){
            exe.printStackTrace();
        }
    }//GEN-LAST:event_modifyBtnActionPerformed

    private void child_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_child_tableMouseClicked
        // TODO add your handling code here:
        try{
            //set data to their texfield
            DefaultTableModel table = (DefaultTableModel)child_table.getModel();
           
            String ID = table.getValueAt(child_table.getSelectedRow(),0).toString();
            String fname = table.getValueAt(child_table.getSelectedRow(),1).toString();
            String lname = table.getValueAt(child_table.getSelectedRow(),2).toString();
            String age = table.getValueAt(child_table.getSelectedRow(),3).toString();
            String grade = table.getValueAt(child_table.getSelectedRow(),4).toString();
            String gender = table.getValueAt(child_table.getSelectedRow(),5).toString() ;
            String amount = table.getValueAt(child_table.getSelectedRow(), 6).toString();
            String location = table.getValueAt(child_table.getSelectedRow(), 7).toString();
            idTxt.setText(ID);
            firstnameTxt.setText(fname);
            lastnameTxt.setText(lname);
            ((JTextField)date_chooser.getDateEditor().getUiComponent()).setText(age);
            classCombo.setSelectedItem(grade);
            genderCombo.setSelectedItem(gender);
            startAmountTxt.setText(amount);
            locationTxt.setText(location);
            startAmountTxt.setEnabled(false);
             
        }catch(Exception exe){
            exe.printStackTrace();
        }
    }//GEN-LAST:event_child_tableMouseClicked

    private void refreshBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshBtnMouseClicked
     
        //set table to 0 rows
        table.setRowCount(0);
        //adding rows 
        addRows();
     
    }//GEN-LAST:event_refreshBtnMouseClicked

    private void updateAmountBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateAmountBtnActionPerformed
       UpdateAmount form = new UpdateAmount();
       dispose();
       form.setVisible(true);
    }//GEN-LAST:event_updateAmountBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
                        idTxt.setText("");
                        firstnameTxt.setText("");
                        lastnameTxt.setText("");
                         ((JTextField)date_chooser.getDateEditor().getUiComponent()).setText("");
                        genderCombo.setSelectedItem(null) ;
                        classCombo.setSelectedItem(null) ;
                        startAmountTxt.setText("");
                        locationTxt.setText("");
                        startAmountTxt.setEnabled(true);
                        searchTxt.setText("");

    }//GEN-LAST:event_clearBtnActionPerformed

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
        // TODO add your handling code here:
        WelcomePage form = new WelcomePage();
        dispose();
        form.setVisible(true);
        
    }//GEN-LAST:event_logoutBtnActionPerformed

    private void idTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idTxtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Children.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Children.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Children.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Children.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Children().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JTable child_table;
    private javax.swing.JComboBox<String> classCombo;
    private javax.swing.JButton clearBtn;
    private com.toedter.calendar.JDateChooser date_chooser;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField firstnameTxt;
    private javax.swing.JComboBox<String> genderCombo;
    private javax.swing.JTextField idTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastnameTxt;
    private javax.swing.JTextField locationTxt;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JButton modifyBtn;
    private javax.swing.JTextField parentIdTxt;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchTxt;
    private javax.swing.JTextField startAmountTxt;
    private javax.swing.JButton updateAmountBtn;
    // End of variables declaration//GEN-END:variables
}
